// Calaos Clock theme file
// HECKY Raoul
// BOEHLER Frederic
// 06/08/2008

// Font section
fonts {
  font: "calaos_content.ttf" "CalaosContent";
}

#include "images.edc"

// Collections section
collections {

  group {
    name: "widget/clock";
    min: 115 115;
    max: 115 115;
    script {
        public clock_cb (val)
        {
                new _year, _month, _day, _yearday, _weekday, _hour, _minute;
                new Float:_second;
                new sec, min, hour;
                new buf[11];
                new str_time[11], str_date[16];

                //get date/time
                date(_year, _month, _day, _yearday, _weekday, _hour, _minute, _second);

                //callback for next second
                sec = round(_second);
                timer(1.0 - (_second - sec), "clock_cb", 0);

                //Seconds
                //some formating stuff
                if (sec < 10)
                        snprintf(buf, 10, "0%i", sec);
                else
                        snprintf(buf, 10, "%i", sec);

                set_state(PART:"sec", buf, 0.0);

                //Minutes
                min = _minute;
                //some formating stuff
                if (min < 10)
                        snprintf(buf, 10, "0%i", min);
                else
                        snprintf(buf, 10, "%i", min);

                set_state(PART:"min", buf, 0.0);

                if (_hour < 10)
                        snprintf(str_time, 10, "0%d:%s", _hour, buf);
                else
                        snprintf(str_time, 10, "%d:%s", _hour, buf);

                set_text(PART:"clock.time", str_time);

                //Hours
                hour = ((_hour % 12) * 5) + ((_minute * 5) / 60);
                //some formating stuff
                if (hour < 10)
                        snprintf(buf, 10, "0%i", hour);
                else
                        snprintf(buf, 10, "%i", hour);

                set_state(PART:"hour", buf, 0.0);

                //Now set text parts

                snprintf(str_date, 10, "%d ", _day);
                switch (_month)
                {
                case 1: snprintf(str_date, 15, "%s jan.", str_date);
                case 2: snprintf(str_date, 15, "%s fev.", str_date);
                case 3: snprintf(str_date, 15, "%s mar.", str_date);
                case 4: snprintf(str_date, 15, "%s avr.", str_date);
                case 5: snprintf(str_date, 15, "%s mai", str_date);
                case 6: snprintf(str_date, 15, "%s juin", str_date);
                case 7: snprintf(str_date, 15, "%s jui.", str_date);
                case 8: snprintf(str_date, 15, "%s aout", str_date);
                case 9: snprintf(str_date, 15, "%s sept.", str_date);
                case 10: snprintf(str_date, 15, "%s oct.", str_date);
                case 11: snprintf(str_date, 15, "%s nov.", str_date);
                case 12: snprintf(str_date, 15, "%s dec.", str_date);
                default: snprintf(str_date, 15, "Unknown date !");
                }

                set_text(PART:"clock.date", str_date);
        }
    }
    parts {
      #include "widget_clock.edc"
    }
    programs {
      #include "widget_clock_prog.edc"
    }
  }

}
